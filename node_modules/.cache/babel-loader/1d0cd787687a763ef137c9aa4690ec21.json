{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\rafpepa\\\\microverse\\\\module 3\\\\crypto-tickers\\\\src\\\\components\\\\TickerDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { tickerRetrieved } from '../redux/ticker/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TickerDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(tickerRetrieved(id));\n  }, [dispatch, id]);\n  const currentTicker = useSelector(state => state.selectedTicker);\n\n  if (currentTicker.loading || currentTicker.data === null) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (currentTicker.error) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"There has been an error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return detail;\n};\n\n_s(TickerDetail, \"nezMQxs7WQIeVEqvlzzcr1J4wW4=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = TickerDetail;\nexport default TickerDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TickerDetail\");","map":{"version":3,"sources":["F:/Work/rafpepa/microverse/module 3/crypto-tickers/src/components/TickerDetail.js"],"names":["React","useEffect","useDispatch","useSelector","useParams","tickerRetrieved","TickerDetail","id","dispatch","currentTicker","state","selectedTicker","loading","data","error","detail"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGN,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACH,eAAe,CAACE,EAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,EAAWD,EAAX,CAFM,CAAT;AAGA,QAAME,aAAa,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAjC;;AACA,MAAIF,aAAa,CAACG,OAAd,IAAyBH,aAAa,CAACI,IAAd,KAAuB,IAApD,EAA0D;AACxD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIJ,aAAa,CAACK,KAAlB,EAAyB;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAOC,MAAP;AACD,CAdD;;GAAMT,Y;UACWF,S,EACEF,W,EAIKC,W;;;KANlBG,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { tickerRetrieved } from '../redux/ticker/actions';\r\n\r\nconst TickerDetail = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(tickerRetrieved(id));\r\n  }, [dispatch, id]);\r\n  const currentTicker = useSelector((state) => state.selectedTicker);\r\n  if (currentTicker.loading || currentTicker.data === null) {\r\n    return <span>Loading...</span>;\r\n  }\r\n  if (currentTicker.error) {\r\n    return <span>There has been an error</span>;\r\n  }\r\n  return detail;\r\n};\r\n\r\nexport default TickerDetail;\r\n"]},"metadata":{},"sourceType":"module"}