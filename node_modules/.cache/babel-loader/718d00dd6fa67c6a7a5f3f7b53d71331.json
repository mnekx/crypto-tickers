{"ast":null,"code":"import { ERROR_FETCHING, FETCHING_STARTED, STARTED_SEARCHING, TICKERS_FETCHED, TICKER_SEARCHED } from './actionTypes';\nimport TickersService from '../../services/tickers-service';\n\nconst tickersFetchingStarted = () => ({\n  type: FETCHING_STARTED\n});\n\nconst tickersFetched = data => ({\n  type: TICKERS_FETCHED,\n  payload: data\n});\n\nconst errorFetchingTickers = () => ({\n  type: ERROR_FETCHING\n});\n\nexport const tickerSearched = tickerName => ({\n  type: TICKER_SEARCHED,\n  name: tickerName\n});\nexport const startedSearching = () => ({\n  type: STARTED_SEARCHING\n});\nexport const tickersRetrieved = () => async dispatch => {\n  dispatch(tickersFetchingStarted());\n\n  try {\n    const res = await TickersService.getAll();\n    dispatch(tickersFetched(res.data)); // return Promise.resolve(res.data);\n  } catch (error) {\n    dispatch(errorFetchingTickers()); // return Promise.resolve(error);\n  }\n};","map":{"version":3,"sources":["F:/Work/rafpepa/microverse/module 3/crypto-tickers-1/src/redux/tickers/actions.js"],"names":["ERROR_FETCHING","FETCHING_STARTED","STARTED_SEARCHING","TICKERS_FETCHED","TICKER_SEARCHED","TickersService","tickersFetchingStarted","type","tickersFetched","data","payload","errorFetchingTickers","tickerSearched","tickerName","name","startedSearching","tickersRetrieved","dispatch","res","getAll","error"],"mappings":"AAAA,SACEA,cADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,eANP;AAQA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,sBAAsB,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA/B;;AAEA,MAAMO,cAAc,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAEJ,eAAR;AAAyBO,EAAAA,OAAO,EAAED;AAAlC,CAAX,CAAvB;;AAEA,MAAME,oBAAoB,GAAG,OAAO;AAAEJ,EAAAA,IAAI,EAAEP;AAAR,CAAP,CAA7B;;AAEA,OAAO,MAAMY,cAAc,GAAIC,UAAD,KAAiB;AAC7CN,EAAAA,IAAI,EAAEH,eADuC;AAE7CU,EAAAA,IAAI,EAAED;AAFuC,CAAjB,CAAvB;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AAACR,EAAAA,IAAI,EAAEL;AAAP,CAAP,CAAzB;AAEP,OAAO,MAAMc,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAACX,sBAAsB,EAAvB,CAAR;;AACA,MAAI;AACF,UAAMY,GAAG,GAAG,MAAMb,cAAc,CAACc,MAAf,EAAlB;AAEAF,IAAAA,QAAQ,CAACT,cAAc,CAACU,GAAG,CAACT,IAAL,CAAf,CAAR,CAHE,CAIF;AACD,GALD,CAKE,OAAOW,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR,CADc,CAEd;AACD;AACF,CAXM","sourcesContent":["import {\r\n  ERROR_FETCHING,\r\n  FETCHING_STARTED,\r\n  STARTED_SEARCHING,\r\n  TICKERS_FETCHED,\r\n  TICKER_SEARCHED\r\n} from './actionTypes';\r\n\r\nimport TickersService from '../../services/tickers-service';\r\n\r\nconst tickersFetchingStarted = () => ({ type: FETCHING_STARTED });\r\n\r\nconst tickersFetched = (data) => ({ type: TICKERS_FETCHED, payload: data });\r\n\r\nconst errorFetchingTickers = () => ({ type: ERROR_FETCHING });\r\n\r\nexport const tickerSearched = (tickerName) => ({\r\n  type: TICKER_SEARCHED,\r\n  name: tickerName,\r\n});\r\n\r\nexport const startedSearching = () => ({type: STARTED_SEARCHING})\r\n\r\nexport const tickersRetrieved = () => async (dispatch) => {\r\n  dispatch(tickersFetchingStarted());\r\n  try {\r\n    const res = await TickersService.getAll();\r\n\r\n    dispatch(tickersFetched(res.data));\r\n    // return Promise.resolve(res.data);\r\n  } catch (error) {\r\n    dispatch(errorFetchingTickers());\r\n    // return Promise.resolve(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}