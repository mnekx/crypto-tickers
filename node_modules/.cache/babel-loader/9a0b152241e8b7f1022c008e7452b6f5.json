{"ast":null,"code":"import { FETCHING_STARTED, TICKERS_FETCHED, ERROR_FETCHING, TICKER_SEARCHED, STARTED_SEARCHING } from './actionTypes';\nconst defaultState = {\n  list: [],\n  loading: false,\n  error: false,\n  searching: false\n};\nexport const tickers = function () {\n  let prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCHING_STARTED:\n      return { ...prevState,\n        loading: true\n      };\n\n    case TICKERS_FETCHED:\n      return {\n        list: action.payload,\n        loading: false,\n        error: false\n      };\n\n    case ERROR_FETCHING:\n      return { ...prevState,\n        error: true,\n        loading: false\n      };\n\n    case TICKER_SEARCHED:\n      console.log(action.name);\n      const re = new RegExp(`${action.name}`, 'img');\n      console.log({ ...prevState,\n        searching: false,\n        list: prevState.list.filter(ticker => ticker.name.match(re) !== null)\n      });\n      return { ...prevState,\n        searching: false,\n        list: prevState.list.filter(ticker => ticker.name.match(re) !== null)\n      };\n\n    case STARTED_SEARCHING:\n      return { ...prevState,\n        searching: true\n      };\n\n    default:\n      return prevState;\n  }\n};","map":{"version":3,"sources":["F:/Work/rafpepa/microverse/module 3/crypto-tickers/src/redux/tickers/reducers.js"],"names":["FETCHING_STARTED","TICKERS_FETCHED","ERROR_FETCHING","TICKER_SEARCHED","STARTED_SEARCHING","defaultState","list","loading","error","searching","tickers","prevState","action","type","payload","console","log","name","re","RegExp","filter","ticker","match"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,eAA3B,EAA4CC,cAA5C,EAA4DC,eAA5D,EAA6EC,iBAA7E,QAAuG,eAAvG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE,KAHU;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAG,YAAoC;AAAA,MAAnCC,SAAmC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,gBAAL;AACI,aAAO,EAAC,GAAGW,SAAJ;AAAeJ,QAAAA,OAAO,EAAE;AAAxB,OAAP;;AACJ,SAAKN,eAAL;AACI,aAAO;AAACK,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAAd;AAAuBP,QAAAA,OAAO,EAAE,KAAhC;AAAuCC,QAAAA,KAAK,EAAE;AAA9C,OAAP;;AACJ,SAAKN,cAAL;AACI,aAAO,EAAC,GAAGS,SAAJ;AAAeH,QAAAA,KAAK,EAAE,IAAtB;AAA4BD,QAAAA,OAAO,EAAE;AAArC,OAAP;;AACJ,SAAKJ,eAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAnB;AACA,YAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAY,GAAEP,MAAM,CAACK,IAAK,EAA1B,EAA6B,KAA7B,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGL,SAAJ;AAAeF,QAAAA,SAAS,EAAE,KAA1B;AAAiCH,QAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,CAAec,MAAf,CAAsBC,MAAM,IAAEA,MAAM,CAACJ,IAAP,CAAYK,KAAZ,CAAkBJ,EAAlB,MAA0B,IAAxD;AAAvC,OAAZ;AACA,aAAO,EAAC,GAAGP,SAAJ;AAAeF,QAAAA,SAAS,EAAE,KAA1B;AAAiCH,QAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,CAAec,MAAf,CAAsBC,MAAM,IAAEA,MAAM,CAACJ,IAAP,CAAYK,KAAZ,CAAkBJ,EAAlB,MAA0B,IAAxD;AAAvC,OAAP;;AACJ,SAAKd,iBAAL;AACI,aAAO,EAAC,GAAGO,SAAJ;AAAeF,QAAAA,SAAS,EAAE;AAA1B,OAAP;;AAEJ;AACG,aAAOE,SAAP;AAhBP;AAkBH,CAnBM","sourcesContent":["import { FETCHING_STARTED, TICKERS_FETCHED, ERROR_FETCHING, TICKER_SEARCHED, STARTED_SEARCHING  } from './actionTypes'\r\n\r\nconst defaultState = {\r\n    list: [],\r\n    loading: false,\r\n    error: false,\r\n    searching: false\r\n}\r\n\r\nexport const tickers = (prevState=defaultState, action) => {\r\n    switch (action.type) {\r\n        case FETCHING_STARTED:\r\n            return {...prevState, loading: true}\r\n        case TICKERS_FETCHED:\r\n            return {list: action.payload, loading: false, error: false}\r\n        case ERROR_FETCHING:\r\n            return {...prevState, error: true, loading: false}\r\n        case TICKER_SEARCHED:\r\n            console.log(action.name)\r\n            const re = new RegExp(`${action.name}`, 'img')\r\n            console.log({...prevState, searching: false, list: prevState.list.filter(ticker=>ticker.name.match(re) !== null)})\r\n            return {...prevState, searching: false, list: prevState.list.filter(ticker=>ticker.name.match(re) !== null)}\r\n        case STARTED_SEARCHING:\r\n            return {...prevState, searching: true}\r\n    \r\n        default:\r\n           return prevState;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}