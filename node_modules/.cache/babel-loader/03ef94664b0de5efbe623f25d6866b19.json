{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define('PropTypes', ['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.PropTypes = mod.exports;\n  }\n})(this, function (exports) {\n  /**\n   * Copyright 2013-2015, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * LICENSE file in the root directory of this source tree. An additional grant\n   * of patent rights can be found in the PATENTS file in the same directory.\n   *\n   * @providesModule ReactPropTypes\n   */\n  'use strict'; // The Symbol used to tag the ReactElement type. If there is no native Symbol\n  // nor polyfill, then a plain number is used for performance.\n\n  exports.__esModule = true;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n  var ReactElement = {};\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid component.\n   * @final\n   */\n\n  ReactElement.isValidElement = function (object) {\n    return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  var ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n  var emptyFunction = {\n    thatReturns: function thatReturns(what) {\n      return function () {\n        return what;\n      };\n    }\n  };\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>';\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  function createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (props[propName] == null) {\n        var locationName = ReactPropTypeLocationNames[location];\n\n        if (isRequired) {\n          return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        var locationName = ReactPropTypeLocationNames[location]; // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n\n        var preciseType = getPreciseType(propValue);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturns(null));\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var locationName = ReactPropTypeLocationNames[location];\n        var propType = getPropType(propValue);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!ReactElement.isValidElement(props[propName])) {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var locationName = ReactPropTypeLocationNames[location];\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      return createChainableTypeChecker(function () {\n        return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n      });\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (propValue === expectedValues[i]) {\n          return null;\n        }\n      }\n\n      var locationName = ReactPropTypeLocationNames[location];\n      var valuesString = JSON.stringify(expectedValues);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      return createChainableTypeChecker(function () {\n        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n      });\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName) == null) {\n          return null;\n        }\n      }\n\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        var locationName = ReactPropTypeLocationNames[location];\n        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || ReactElement.isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  exports.default = ReactPropTypes;\n});","map":{"version":3,"mappings":"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","names":["REACT_ELEMENT_TYPE","Symbol","for","ReactElement","isValidElement","object","$$typeof","ReactPropTypeLocationNames","prop","context","childContext","emptyFunction","thatReturns","what","ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","iteratorFn","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bool","func","number","string","symbol","any","createAnyTypeChecker","arrayOf","createArrayOfTypeChecker","element","createElementTypeChecker","instanceOf","createInstanceTypeChecker","node","createNodeChecker","objectOf","createObjectOfTypeChecker","oneOf","createEnumTypeChecker","oneOfType","createUnionTypeChecker","shape","createShapeTypeChecker","createChainableTypeChecker","validate","checkType","isRequired","props","propName","componentName","location","propFullName","locationName","Error","chainedCheckType","bind","expectedType","propValue","propType","getPropType","preciseType","getPreciseType","typeChecker","Array","isArray","i","length","error","expectedClass","expectedClassName","name","actualClassName","getClassName","expectedValues","valuesString","JSON","stringify","key","hasOwnProperty","arrayOfTypeCheckers","checker","isNode","shapeTypes","every","call","step","entries","next","done","value","entry","isSymbol","RegExp","Date","constructor"],"sources":["F:\\Work\\rafpepa\\microverse\\module 3\\crypto-tickers\\node_modules\\proptypes\\src\\index.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE =\n  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) ||\n  0xeac7;\n\nvar ReactElement = {};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n};\n\nvar ReactPropTypeLocationNames = {\n  prop: 'prop',\n  context: 'context',\n  childContext: 'child context',\n};\n\n\n\n\nvar emptyFunction = {\n  thatReturns: function(what) {\n    return function(){ return what; };\n  }\n};\n\n\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL]\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\n\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker,\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location,\n    propFullName\n  ) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          `Required ${locationName} \\`${propFullName}\\` was not specified in ` +\n          `\\`${componentName}\\`.`\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${preciseType}\\` supplied to \\`${componentName}\\`, expected ` +\n        `\\`${expectedType}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an array.`\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(\n        propValue,\n        i,\n        componentName,\n        location,\n        `${propFullName}[${i}]`\n      );\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a single ReactElement.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${actualClassName}\\` supplied to \\`${componentName}\\`, expected ` +\n        `instance of \\`${expectedClassName}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOf, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` of value \\`${propValue}\\` ` +\n      `supplied to \\`${componentName}\\`, expected one of ${valuesString}.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an object.`\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(\n          propValue,\n          key,\n          componentName,\n          location,\n          `${propFullName}.${key}`\n        );\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOfType, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (\n        checker(props, propName, componentName, location, propFullName) == null\n      ) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n      `\\`${componentName}\\`.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a ReactNode.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type \\`${propType}\\` ` +\n        `supplied to \\`${componentName}\\`, expected \\`object\\`.`\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(\n        propValue,\n        key,\n        componentName,\n        location,\n        `${propFullName}.${key}`\n      );\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nexport default ReactPropTypes;\n"]},"metadata":{},"sourceType":"script"}